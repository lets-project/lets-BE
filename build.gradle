buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}
plugins {
	id 'org.springframework.boot' version '2.6.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	//querydsl 추가
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id 'java'
}

group = 'com.lets'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	//cloudinary-java
	// https://mvnrepository.com/artifact/com.cloudinary/cloudinary
	implementation group: 'com.cloudinary', name: 'cloudinary', version: '1.0.2'

	implementation 'com.querydsl:querydsl-jpa'
	implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5'

	// spring-data-redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	//embedded-redis
//	implementation group: 'it.ozimov', name: 'embedded-redis', version: '0.7.2'
	compile("io.lettuce:lettuce-core:5.0.3.RELEASE")
	implementation 'org.json:json:20190722'
	implementation 'javax.xml.bind:jaxb-api'
	implementation 'org.glassfish.jaxb:jaxb-runtime'
	implementation 'javax.activation:activation:1.1.1'

	implementation 'io.jsonwebtoken:jjwt:0.9.0'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation('org.springframework.boot:spring-boot-starter-oauth2-client')
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-devtools'
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//querydsl 추가
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

}
// QueryDSL
sourceSets {
	main {
		java {
			srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
		}
	}
}
test {
	useJUnitPlatform()
}

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}
//querydsl 추가 끝
